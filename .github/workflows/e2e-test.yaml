name: Playwright

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 7 * * 0'

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # process.env.CI is automatically set to true by GitHub Actions.
      # process.env.NODE_ENV is automatically set to production by next start.
      PLAYWRIGHT_DEPS_PATH: /tmp/.ms-playwright
      # Google Analytics credentials.
      NEXT_PUBLIC_GOOGLE_ANALYTICS_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS_MEASUREMENT_ID }}
      # Stack Auth credentials.
      NEXT_PUBLIC_STACK_PROJECT_ID               : ${{ secrets.NEXT_PUBLIC_STACK_PROJECT_ID }}
      NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY   : ${{ secrets.NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY }}
      STACK_SECRET_SERVER_KEY                    : ${{ secrets.STACK_SECRET_SERVER_KEY }}
      # LangChain credentials.
      LANGSMITH_TRACING                          : ${{ secrets.LANGSMITH_TRACING }}
      LANGSMITH_ENDPOINT                         : ${{ secrets.LANGSMITH_ENDPOINT }}
      LANGSMITH_API_KEY                          : ${{ secrets.LANGSMITH_API_KEY }}
      LANGSMITH_PROJECT                          : ${{ secrets.LANGSMITH_PROJECT }}
      LANGCHAIN_CALLBACKS_BACKGROUND             : ${{ secrets.LANGCHAIN_CALLBACKS_BACKGROUND }}
      # OpenAI credentials.
      OPENAI_GPT_API_KEY                         : ${{ secrets.OPENAI_GPT_API_KEY }}
      OPENAI_GPT_LITE_MODEL_ID                   : ${{ secrets.OPENAI_GPT_LITE_MODEL_ID }}
      OPENAI_GPT_REGULAR_MODEL_ID                : ${{ secrets.OPENAI_GPT_REGULAR_MODEL_ID }}
      OPENAI_GPT_PREMIUM_MODEL_ID                : ${{ secrets.OPENAI_GPT_PREMIUM_MODEL_ID }}
      # Google Gemini credentials.
      GOOGLE_GEMINI_API_KEY                      : ${{ secrets.GOOGLE_GEMINI_API_KEY }}
      GOOGLE_GEMINI_LITE_MODEL_ID                : ${{ secrets.GOOGLE_GEMINI_LITE_MODEL_ID }}
      GOOGLE_GEMINI_REGULAR_MODEL_ID             : ${{ secrets.GOOGLE_GEMINI_REGULAR_MODEL_ID }}
      GOOGLE_GEMINI_PREMIUM_MODEL_ID             : ${{ secrets.GOOGLE_GEMINI_PREMIUM_MODEL_ID }}
      # Anthropic Claude credentials.
      ANTHROPIC_CLAUDE_API_KEY                   : ${{ secrets.ANTHROPIC_CLAUDE_API_KEY }}
      ANTHROPIC_CLAUDE_LITE_MODEL_ID             : ${{ secrets.ANTHROPIC_CLAUDE_LITE_MODEL_ID }}
      ANTHROPIC_CLAUDE_REGULAR_MODEL_ID          : ${{ secrets.ANTHROPIC_CLAUDE_REGULAR_MODEL_ID }}
      ANTHROPIC_CLAUDE_PREMIUM_MODEL_ID          : ${{ secrets.ANTHROPIC_CLAUDE_PREMIUM_MODEL_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm before node
        # Pinned to commit hash of release v4.0.0 on 05/07/24.
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2
        # Omit with to use package.json packageManager field pnpm version.

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get Playwright's Version
        id: playwright-version
        shell: bash
        run: echo "PLAYWRIGHT_VERSION=$(node -p 'require("@playwright/test/package.json").version')" >> $GITHUB_OUTPUT
        
      - name: Cache Playwright binaries
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PLAYWRIGHT_DEPS_PATH }}
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}

      - name: Install Playwrigtht dependencies with cache on cache miss
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm test:e2e:install

      - name: End-to-end test
        run: pnpm test:e2e

      - name: Upload Playwright artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: .playwright/**/*
          include-hidden-files: true
          if-no-files-found: error
